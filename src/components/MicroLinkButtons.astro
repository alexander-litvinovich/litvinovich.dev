---
interface Button {
  label: string;
  desc: string;
  href: string;
  newWindow?: boolean;
}

const { buttons } = Astro.props as { buttons: Button[] };
---

<div class="MicroLinkButtons">
  {
    buttons.map((button, index) => (
      <>
        <a
          class="MicroLinkButtons_button"
          href={button.href}
          target={button.newWindow ? "_blank" : "_self"}
        >
          <span class="MicroLinkButtons_label">{button.label}</span>
          <span class="MicroLinkButtons_desc">{button.desc}</span>
        </a>
        {index < buttons.length - 1 && (
          <div class="MicroLinkButtons_separator" />
        )}
      </>
    ))
  }
</div>

<style>
  .MicroLinkButtons {
    margin: 0 var(--side-paddings);
    padding: 16px;
    display: flex;
    flex-direction: column;
    gap: 16px;
    background-color: var(--color-paper);
    border-radius: 16px;
  }

  .MicroLinkButtons_button {
    display: flex;
    flex-direction: column;
    text-decoration: none;
  }

  .MicroLinkButtons_label {
    position: relative;
    font-family: "Roboto Mono";
    font-size: 24px;
    font-weight: 700;
    line-height: 32px;
    color: var(--color-green);
    font-style: normal;
  }

  .MicroLinkButtons_label::before {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    content: "";
    border-style: solid;
    border-width: 4px;
    border-color: var(--color-green) var(--color-green) transparent transparent;
  }

  .MicroLinkButtons_desc {
    font-family: "Georgia";
    font-size: 14px;
    font-weight: 400;
    line-height: 16px;

    color: var(--color-white-50);
    font-style: italic;
  }

  .MicroLinkButtons_separator {
    height: 1px;
    background-color: var(--color-white-20);
  }

  @media (pointer: fine) {
    .MicroLinkButtons_label {
      transition: all 0.2s ease-in-out;
    }

    .MicroLinkButtons_button:hover .MicroLinkButtons_label {
      animation: text-blink 400ms ease-in-out infinite;
    }

    .MicroLinkButtons_button:hover .MicroLinkButtons_label::before {
      border-color: var(--color-white-30) var(--color-white-30) transparent
        transparent;
    }
  }

  @keyframes text-blink {
    0% {
      color: var(--color-green);
      text-shadow: none;
    }
    50% {
      color: var(--color-white);
      text-shadow: 0 0 16px var(--color-green);
    }
    100% {
      color: var(--color-green);
      text-shadow: none;
    }
  }
</style>
