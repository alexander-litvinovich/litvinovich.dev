---
import { Image } from "astro:assets";

interface AccountLink {
  href: string;
  label: string;
  networkLabel: string;
  iconSrc: any;
}

const { accountLinks, header, body } = Astro.props as {
  accountLinks: AccountLink[];
  header: string;
  body: string;
};
---

<div class="MicroAccLinks">
  <div class="MicroAccLinks_narrative">
    <h3 class="MicroAccLinks_narrativeHeader">{header}</h3>
    <p class="MicroAccLinks_narrativeBody">
      {body}
    </p>
  </div>
  <div class="MicroAccLinks_wrapper">
    {
      accountLinks.map((link, index) => (
        <>
          <a class="MicroAccLinks_link" href={link.href} target="_blank">
            <div class="MicroAccLinks_image">
              <Image src={link.iconSrc} alt="" />
            </div>
            <div class="MicroAccLinks_col">
              <span class="MicroAccLinks_name">{link.label}</span>
              <span class="MicroAccLinks_net">{link.networkLabel}</span>
            </div>
          </a>
          {index < accountLinks.length - 1 && (
            <div class="MicroAccLinks_separator" />
          )}
        </>
      ))
    }
  </div>
</div>

<style>
  .MicroAccLinks {
    padding: 16px;
    display: grid;
    gap: 16px;
    background-color: var(--color-paper);
    border-radius: 16px;
    grid-template-columns: 0.35fr 0.65fr;
  }

  @media (max-width: 640px) {
    .MicroAccLinks {
      display: flex;
      flex-direction: column;
    }
  }

  .MicroAccLinks_narrative p,
  .MicroAccLinks_narrative h3 {
    margin: 0;
    padding: 0;
  }

  .MicroAccLinks_narrative {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .MicroAccLinks_narrativeHeader {
    line-height: 24px;
    color: var(--color-white-80);
  }

  .MicroAccLinks_narrativeBody {
    font-family: "Georgia";
    font-size: 16px;
    font-weight: 400;
    line-height: 24px;
    color: var(--color-white-50);
    font-style: italic;
  }

  .MicroAccLinks_wrapper {
    padding-left: 24px;
    display: flex;
    flex-direction: column;
    gap: 16px;
    border-left: 1px solid var(--color-white-20);
  }

  @media (max-width: 640px) {
    .MicroAccLinks_wrapper {
      border-left: none;
      padding-left: 0;
    }
  }

  .MicroAccLinks_link {
    display: grid;
    grid-template-columns: auto 1fr auto;
    gap: 12px;
    color: var(--color-white);
    text-decoration: none;
    align-items: center;
  }

  .MicroAccLinks_col {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .MicroAccLinks_col::before {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    content: "";
    border-style: solid;
    border-width: 4px;
    border-color: var(--color-green) var(--color-green) transparent transparent;
  }

  .MicroAccLinks_image {
    width: 48px;
    height: 48px;
    overflow: hidden;
    background-color: var(--color-paper);
    border-radius: 50%;
  }

  .MicroAccLinks_image img {
    width: 100%;
    height: 100%;
  }

  .MicroAccLinks_name {
    font-size: 24px;
    color: var(--color-green);
  }

  .MicroAccLinks_net {
    font-family: "Georgia";
    font-size: 14px;
    font-weight: 400;
    line-height: 16px;
    color: var(--color-white-50);
    font-style: italic;
  }

  .MicroAccLinks_separator {
    height: 1px;
    background-color: var(--color-white-20);
  }

  @media (pointer: fine) {
    .MicroAccLinks_link:hover .MicroAccLinks_name {
      animation: blink 400ms ease-in-out infinite;
    }

    .MicroAccLinks_link:hover .MicroAccLinks_col::before {
      border-color: var(--color-white-30) var(--color-white-30) transparent
        transparent;
    }
  }

  @keyframes blink {
    0% {
      color: var(--color-green);
      text-shadow: none;
    }
    50% {
      color: var(--color-white);
      text-shadow: 0 0 16px var(--color-green);
    }
    100% {
      color: var(--color-green);
      text-shadow: none;
    }
  }
</style>
