---
import { Image } from "astro:assets";
import ava from "@/assets/avatar.png";

const grid = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
---

<>
  <div class="face">
    <div class="bgGlare"></div>
    <div class="faceCompose">
      <Image class="faceImage" src={ava} alt="" />
      <div class="faceMask"></div>
    </div>
    <div class="ring pos">
      <div class="ring">
        <div class="ring">
          <div class="ring noPadding">
            <div class="grid">
              <div class="gridHorizontal">
                {grid.map((el) => <div class="bar" />)}
              </div>
              <div class="gridVertical">
                {grid.map((el) => <div class="bar" />)}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="flare green"></div>
  <div class="flare violet"></div>
</>

<style>
  .face {
    width: 600px;
    /* width: 100%; */
    aspect-ratio: 1;
    position: relative;
  }

  .bgGlare {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;

    z-index: 0;
    background: radial-gradient(
      50% 50% at 50% 50%,
      rgba(255, 255, 255, 0.6) 0%,
      transparent 100%
    );
  }

  .faceCompose {
    mix-blend-mode: multiply;
  }

  .faceImage {
    display: flex;
    width: 100%;
    height: 100%;

    /* z-index: 1; */
  }

  .faceMask {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 1;
    background: radial-gradient(50% 50% at 50% 50%, transparent 0%, #fff 100%);
  }

  .flare.green {
    position: fixed;
    width: 440px;
    height: 440px;
    left: -220px;
    top: -220px;

    background: radial-gradient(
      50% 50% at 50% 50%,
      var(--color-green) 0%,
      transparent 100%
    );
    mix-blend-mode: screen;
  }
  .flare.violet {
    position: fixed;
    width: 600px;
    height: 400px;
    right: -300px;
    top: 100px;

    background: radial-gradient(
      50% 50% at 50% 50%,
      var(--color-violet) 0%,
      transparent 100%
    );
    mix-blend-mode: screen;
    opacity: 0.7;
  }

  .ring.pos {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 70%;
    z-index: 3;
  }

  .ring {
    border: 1px solid #fff;
    padding: 24px;
    aspect-ratio: 1;
    border-radius: 50%;
  }

  .ring.noPadding {
    padding: 0px;
  }
  .grid {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    overflow: hidden;

    position: relative;
  }

  .gridHorizontal,
  .gridVertical {
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
    display: flex;
    justify-content: space-between;
  }
  .gridHorizontal {
    flex-direction: row;
  }
  .gridVertical {
    flex-direction: column;
  }

  .gridHorizontal .bar {
    width: 1px;
    height: 100%;
    background-color: aquamarine;
  }

  .gridVertical .bar {
    width: 100%;
    height: 1px;
    background-color: aquamarine;
  }

  .gridVertical .bar:first-child,
  .gridVertical .bar:last-child,
  .gridHorizontal .bar:first-child,
  .gridHorizontal .bar:last-child {
    background-color: transparent;
  }
</style>
